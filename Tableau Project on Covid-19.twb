<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top 15 active cases country' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='10' min='1' />
      </column>
    </datasource>
    <datasource caption='worldometer_coronavirus_summary_data' inline='true' name='federated.0vfu3z51p9zug81bh4pbe1ljuyx3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='worldometer_coronavirus_summary_data' name='textscan.06wr2080aaap5h16io0rw0xxf51n'>
            <connection class='textscan' directory='C:/Users/ameys/Downloads/archive (2)' filename='worldometer_coronavirus_summary_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06wr2080aaap5h16io0rw0xxf51n' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Continent' ordinal='1' />
            <column datatype='integer' name='total_confirmed' ordinal='2' />
            <column datatype='real' name='total_deaths' ordinal='3' />
            <column datatype='real' name='Total Cured' ordinal='4' />
            <column datatype='real' name='active_cases' ordinal='5' />
            <column datatype='real' name='total_tests' ordinal='6' />
            <column datatype='integer' name='Total Population' ordinal='7' />
            <column datatype='real' name='Recovery Rate' ordinal='8' />
            <column datatype='real' name='Mortality Rate' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.06wr2080aaap5h16io0rw0xxf51n' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Continent' ordinal='1' />
            <column datatype='integer' name='total_confirmed' ordinal='2' />
            <column datatype='real' name='total_deaths' ordinal='3' />
            <column datatype='real' name='Total Cured' ordinal='4' />
            <column datatype='real' name='active_cases' ordinal='5' />
            <column datatype='real' name='total_tests' ordinal='6' />
            <column datatype='integer' name='Total Population' ordinal='7' />
            <column datatype='real' name='Recovery Rate' ordinal='8' />
            <column datatype='real' name='Mortality Rate' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_47031107401547A9900FA1E0BFFC4C23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Continent]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>Continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_47031107401547A9900FA1E0BFFC4C23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_confirmed]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_confirmed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_47031107401547A9900FA1E0BFFC4C23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_47031107401547A9900FA1E0BFFC4C23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cured</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Cured]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>Total Cured</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_47031107401547A9900FA1E0BFFC4C23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active_cases]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>active_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_47031107401547A9900FA1E0BFFC4C23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_47031107401547A9900FA1E0BFFC4C23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>Total Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_47031107401547A9900FA1E0BFFC4C23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovery Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Recovery Rate]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>Recovery Rate</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_47031107401547A9900FA1E0BFFC4C23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality Rate]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>Mortality Rate</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_47031107401547A9900FA1E0BFFC4C23]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Mortality Rate]' role='measure' type='quantitative' />
      <column datatype='real' name='[Recovery Rate]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Cured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Population]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='worldometer_coronavirus_summary_data.csv' datatype='table' name='[__tableau_internal_object_id__].[worldometer_coronavirus_summary_data.csv_47031107401547A9900FA1E0BFFC4C23]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
      <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Recovery Rate]' derivation='Sum' name='[sum:Recovery Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Cured]' derivation='Sum' name='[sum:Total Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#00c100'>
              <bucket>&quot;[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:Total Cured:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:Recovery Rate:qk]&quot;</bucket>
            </map>
            <map to='#ea0000'>
              <bucket>&quot;[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:total_deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;State Of Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Democratic Republic Of The Congo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua And Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle Of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Pierre And Miquelon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turks And Caicos Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Tome And Principe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Vincent And The Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wallis And Futuna Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad And Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cote D Ivoire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Kitts And Nevis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <filter class='quantitative' column='[Mortality Rate]' filter-group='2' included-values='non-null' />
      <filter class='quantitative' column='[Recovery Rate]' filter-group='2' included-values='non-null' />
      <filter class='quantitative' column='[Total Cured]' filter-group='2' included-values='non-null' />
      <filter class='quantitative' column='[Total Population]' filter-group='2' included-values='non-null' />
      <filter class='quantitative' column='[active_cases]' filter-group='2' included-values='non-null' />
      <filter class='quantitative' column='[total_confirmed]' filter-group='2' included-values='non-null' />
      <filter class='quantitative' column='[total_deaths]' filter-group='2' included-values='non-null' />
      <filter class='quantitative' column='[total_tests]' filter-group='2' included-values='non-null' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='worldometer_coronavirus_summary_data.csv' id='worldometer_coronavirus_summary_data.csv_47031107401547A9900FA1E0BFFC4C23'>
            <properties context=''>
              <relation connection='textscan.06wr2080aaap5h16io0rw0xxf51n' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Continent' ordinal='1' />
                  <column datatype='integer' name='total_confirmed' ordinal='2' />
                  <column datatype='real' name='total_deaths' ordinal='3' />
                  <column datatype='real' name='Total Cured' ordinal='4' />
                  <column datatype='real' name='active_cases' ordinal='5' />
                  <column datatype='real' name='total_tests' ordinal='6' />
                  <column datatype='integer' name='Total Population' ordinal='7' />
                  <column datatype='real' name='Recovery Rate' ordinal='8' />
                  <column datatype='real' name='Mortality Rate' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_DB4329BBC6464D6780219C338968B205]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.0vfu3z51p9zug81bh4pbe1ljuyx3' type='datasource'>
        <exclude-sheet name='Bar ' />
        <exclude-sheet name='Scatter plot' />
        <exclude-sheet name='bubbles chart' />
        <exclude-sheet name='Dual axis ' />
        <exclude-sheet name='Tree Map' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dual axis ' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Top 10 Active Cases Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.0vfu3z51p9zug81bh4pbe1ljuyx3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 15 active cases country' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vfu3z51p9zug81bh4pbe1ljuyx3'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([active_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:active_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:active_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#499894' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]</rows>
        <cols>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:active_cases:qk]</cols>
      </table>
      <simple-id uuid='{7B2481F7-4FA5-4E6B-8648-1AFD48CB1DFD}' />
    </worksheet>
    <worksheet name='Dual axis '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Total Deaths And Recoverd Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.0vfu3z51p9zug81bh4pbe1ljuyx3' />
          </datasources>
          <datasource-dependencies datasource='federated.0vfu3z51p9zug81bh4pbe1ljuyx3'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Total Cured]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Cured]' derivation='Sum' name='[sum:Total Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:total_deaths:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:Total Cured:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:Total Cured:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:total_deaths:qk] + [federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:Total Cured:qk])</rows>
        <cols>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{2A3BD1C4-430C-4330-A9BD-A819214CD70D}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Global Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.0vfu3z51p9zug81bh4pbe1ljuyx3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vfu3z51p9zug81bh4pbe1ljuyx3'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[Longitude (generated)]' field-type='quantitative' max='25636425.434152909' min='-13496017.639687261' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[Latitude (generated)]' field-type='quantitative' max='18773315.533574276' min='-19243714.494243171' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:total_confirmed:qk]' />
              <text column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:active_cases:qk]' />
              <lod column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5272375345230103' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#d60000' />
                <format attr='mark-transparency' value='249' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[Latitude (generated)]</rows>
        <cols>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{858F50F6-07CF-453B-B6C3-5822BED22ACF}' />
    </worksheet>
    <worksheet name='Scatter plot'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Scatter Plot For Total Confirmed Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.0vfu3z51p9zug81bh4pbe1ljuyx3' />
          </datasources>
          <datasource-dependencies datasource='federated.0vfu3z51p9zug81bh4pbe1ljuyx3'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_confirmed])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]' />
              <size column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]' />
              <text column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:total_confirmed:qk]' />
              <text column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]' />
              <lod column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:total_confirmed:qk]</rows>
        <cols>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:total_tests:qk]</cols>
      </table>
      <simple-id uuid='{20E05A53-14AC-4EE9-A446-3995520AE181}' />
    </worksheet>
    <worksheet name='Tree Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Total Deaths By Count</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>ry</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.0vfu3z51p9zug81bh4pbe1ljuyx3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vfu3z51p9zug81bh4pbe1ljuyx3'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:total_deaths:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:total_deaths:qk]' />
              <color column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:total_deaths:qk]' />
              <text column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]' />
              <text column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1F5E91A3-F734-40AD-98BD-26775E086ED2}' />
    </worksheet>
    <worksheet name='bubbles chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Mortality Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.0vfu3z51p9zug81bh4pbe1ljuyx3' />
          </datasources>
          <datasource-dependencies datasource='federated.0vfu3z51p9zug81bh4pbe1ljuyx3'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Mortality Rate]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mortality Rate]' derivation='Sum' name='[sum:Mortality Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Mortality Rate])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]' direction='ASC' using='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:Mortality Rate:qk]' />
          <slices>
            <column>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:Mortality Rate:qk]' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]' />
              <size column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:Mortality Rate:qk]' />
              <text column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]' />
              <text column='[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:Mortality Rate:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[sum:Mortality Rate:qk]</run>
                <run>&gt;%</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0C5738B7-6570-4D3E-8BE9-3BDB0C9DF0E9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' italic='true'>Covid-19 World Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#d60000' />
          <format attr='text-align' value='auto' />
          <format attr='border-color' value='#000000' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='3' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top 15 active cases country' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range max='10' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98014' id='23' param='vert' type-v2='layout-flow' w='99002' x='499' y='993'>
            <zone h='7196' id='24' type-v2='title' w='99002' x='499' y='993'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90818' id='21' param='vert' type-v2='layout-flow' w='99002' x='499' y='8189'>
              <zone h='90818' id='18' param='horz' type-v2='layout-flow' w='99002' x='499' y='8189'>
                <zone h='90818' id='16' type-v2='layout-basic' w='89027' x='499' y='8189'>
                  <zone h='45428' id='8' param='horz' type-v2='layout-flow' w='89027' x='499' y='53579'>
                    <zone fixed-size='599' h='45428' id='11' is-fixed='true' name='Tree Map' w='37843' x='499' y='53579'>
                      <layout-cache type-h='fixed' type-w='fixed' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='3' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='45428' id='10' name='Dual axis ' w='51184' x='38342' y='53579'>
                      <layout-cache cell-count-w='191' minheight='337' non-cell-size-w='201' type-h='scalable' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='3' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='45390' id='9' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='89027' x='499' y='8189'>
                    <zone h='45409' id='15' name='Bar ' w='22257' x='499' y='8189'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='3' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='45409' id='14' name='bubbles chart' w='22256' x='22756' y='8189'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='3' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='45409' id='13' name='Scatter plot' w='22257' x='45012' y='8189'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='3' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='45409' id='12' name='Map' w='22257' x='67269' y='8189'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='3' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone fixed-size='160' h='90818' id='17' is-fixed='true' param='vert' type-v2='layout-flow' w='9975' x='89526' y='8189'>
                  <zone h='7445' id='19' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='9601' x='89713' y='8561'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' italic='true'>Covid-19 World Data</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='32' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98014' id='31' param='vert' type-v2='layout-flow' w='99002' x='499' y='993'>
                <zone h='7196' id='24' type-v2='title' w='99002' x='499' y='993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45409' id='15' is-fixed='true' name='Bar ' w='22257' x='499' y='8189'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45409' id='14' is-fixed='true' name='bubbles chart' w='22256' x='22756' y='8189'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45409' id='13' is-fixed='true' name='Scatter plot' w='22257' x='45012' y='8189'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45409' id='12' is-fixed='true' name='Map' w='22257' x='67269' y='8189'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7445' id='19' mode='type_in' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='9601' x='89713' y='8561'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45428' id='11' is-fixed='true' name='Tree Map' w='37843' x='499' y='53579'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45428' id='10' is-fixed='true' name='Dual axis ' w='51184' x='38342' y='53579'>
                  <layout-cache cell-count-w='191' minheight='337' non-cell-size-w='201' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='3' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BC342D9F-CBD5-46CF-882F-5E42D6C3F825}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Bar '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2B767FA-E752-4E8F-BE90-7C983E6A05E5}' />
    </window>
    <window class='worksheet' name='Scatter plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2AEE432-CA4F-4B2C-8275-3CBFB183F47F}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A53C11C0-3C2E-4C05-9EC8-36DFA0896EE4}' />
    </window>
    <window class='worksheet' name='Tree Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76D49410-8135-47BF-8B22-835B2D2EB7F2}' />
    </window>
    <window class='worksheet' name='bubbles chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D97B253-07A5-4C8F-BB37-5D5A7ADBD6D8}' />
    </window>
    <window class='worksheet' name='Dual axis '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vfu3z51p9zug81bh4pbe1ljuyx3].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF3FAAC9-0756-46CB-8188-685BF3F3AD8E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Bar ' />
        <viewpoint name='Dual axis '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Scatter plot'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Tree Map' />
        <viewpoint name='bubbles chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='17' />
      <simple-id uuid='{9419D797-6CBA-487F-ACEB-33B698DAF7DF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dual axis ' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Scatter plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tree Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='bubbles chart' width='192'>
      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
      a0BEiNX4/y/7NfEzQEoPAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
